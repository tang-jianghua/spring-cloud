<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.19.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.tang</groupId>
    <artifactId>spring-cloud</artifactId>
    <version>Edgware.RELEASE</version>
    <properties>
        <spring-cloud.version>Edgware.RELEASE</spring-cloud.version>
        <!--<spring-cloud-starter-eureka-server.version>1.4.6.RELEASE</spring-cloud-starter-eureka-server.version>-->
        <!--<spring-cloud-starter-netflix-eureka-server.version>1.4.6.RELEASE</spring-cloud-starter-netflix-eureka-server.version>-->
        <!--<spring-cloud-starter-netflix-eureka-client.version>1.4.6.RELEASE</spring-cloud-starter-netflix-eureka-client.version>-->
        <!--<spring-cloud-starter-feign.version>1.4.6.RELEASE</spring-cloud-starter-feign.version>-->
        <!--<spring-cloud-starter-hystrix.version>1.4.6.RELEASE</spring-cloud-starter-hystrix.version>-->
        <!--<spring-cloud-starter-hystrix-dashboard.version>1.4.6.RELEASE</spring-cloud-starter-hystrix-dashboard.version>-->
        <!--<spring-cloud-starter-netflix-zuul.version>1.4.6.RELEASE</spring-cloud-starter-netflix-zuul.version>-->
        <!--<spring-retry.version>1.2.4.RELEASE</spring-retry.version>-->
        <!--<spring-boot-starter-amqp.version>1.5.19.RELEASE</spring-boot-starter-amqp.version>-->
        <!--<spring-cloud-starter-security.version>2.1.2.RELEASE</spring-cloud-starter-security.version>-->
        <!--<spring-cloud-config-server.version>1.4.5.RELEASE</spring-cloud-config-server.version>-->
        <!--<spring-boot-starter-actuator.version>1.5.19.RELEASE</spring-boot-starter-actuator.version>-->
        <!--<spring-cloud-starter-config.version>1.4.5.RELEASE</spring-cloud-starter-config.version>-->
        <!--<spring-cloud-starter-bus-amqp.version>1.3.4.RELEASE</spring-cloud-starter-bus-amqp.version>-->
        <!--<zipkin-server.version>2.7.5</zipkin-server.version>-->
        <!--<zipkin-autoconfigure-ui.version>2.7.5</zipkin-autoconfigure-ui.version>-->
        <!--<spring-cloud-starter-security.version>1.0.2.RELEASE</spring-cloud-starter-security.version>-->
        <!--<spring-cloud-starter-oauth2.version>2.1.2.RELEASE</spring-cloud-starter-oauth2.version>-->
        <!--<spring-cloud-starter-oauth2.version>1.0.2.RELEASE</spring-cloud-starter-oauth2.version>-->
        <!--<spring-security-oauth2-autoconfigure.version>1.0.2.RELEASE</spring-security-oauth2-autoconfigure.version>-->
    </properties>

    <modules>
        <module>zuul</module>
        <!--<module>auth</module>-->
        <!--<module>producer</module>-->
        <!--<module>consumer</module>-->
        <module>zipkin-server</module>
        <module>config-server</module>
        <module>eureka-server</module>
        <module>eureka-service-provider</module>
        <module>eureka-client</module>
    </modules>

    <!--  利用传递依赖，公共部分  -->
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
    </dependencies>

<dependencyManagement>
    <dependencies>
        <!--spring-cloud-starter-eureka-server已过期-->
      <!--  <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka-server</artifactId>
            <version>${spring-cloud-starter-eureka-server.version}</version>
        </dependency>-->
        <!-- https://mvnrepository.com/artifact/io.zipkin.java/zipkin-server -->
     <!--   <dependency>
            <groupId>io.zipkin.java</groupId>
            <artifactId>zipkin-server</artifactId>
            <version>${zipkin-server.version}</version>
        </dependency>
        &lt;!&ndash; https://mvnrepository.com/artifact/io.zipkin.java/zipkin-autoconfigure-ui &ndash;&gt;
        <dependency>
            <groupId>io.zipkin.java</groupId>
            <artifactId>zipkin-autoconfigure-ui</artifactId>
            <version>${zipkin-autoconfigure-ui.version}</version>
        </dependency>-->
      <!--  <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
            <version>${spring-retry.version}</version>
        </dependency>
        &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-bus-amqp &ndash;&gt;
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
            <version>${spring-cloud-starter-bus-amqp.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-feign</artifactId>
            <version>${spring-cloud-starter-feign.version}</version>
        </dependency>
        &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-hystrix &ndash;&gt;
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix</artifactId>
            <version>${spring-cloud-starter-hystrix.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix-dashboard</artifactId>
            <version>${spring-cloud-starter-hystrix-dashboard.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
            <version>${spring-cloud-starter-netflix-zuul.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
            <version>${spring-cloud-starter-netflix-eureka-server.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
            <version>${spring-cloud-starter-netflix-eureka-client.version}</version>
        </dependency>
        &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-config-server &ndash;&gt;
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
            <version>${spring-cloud-config-server.version}</version>
        </dependency>
        &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-config &ndash;&gt;
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
            <version>${spring-cloud-starter-config.version}</version>
        </dependency>
        &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator &ndash;&gt;
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${spring-boot-starter-actuator.version}</version>
        </dependency>-->

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>${spring-cloud.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
       <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
            <version>${spring-boot-starter-amqp.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-security</artifactId>
            <version>${spring-cloud-starter-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-oauth2</artifactId>
            <version>${spring-cloud-starter-oauth2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security.oauth.boot</groupId>
            <artifactId>spring-security-oauth2-autoconfigure</artifactId>
            <version>${spring-security-oauth2-autoconfigure.version}</version>
        </dependency>-->
    </dependencies>
</dependencyManagement>

</project>